from pydantic import BaseModel

from typing import Optional, List
import datetime

class VulnerabilityDefinitionBase(BaseModel):
    name: str
    description: Optional[str] = None
    severity: str

class VulnerabilityDefinition(VulnerabilityDefinitionBase):
    id: int
    signature: str
    class Config:
        orm_mode = True

class VulnerabilityOccurrenceBase(BaseModel):
    id: int
    status: str
    port: str
    scan_id: int
    asset_id: int
    class Config:
        orm_mode = True

class VulnerabilityEvent(BaseModel):
    id: int
    status_change: str
    timestamp: datetime.datetime
    user_id: Optional[int] = None
    class Config:
        orm_mode = True

class VulnerabilityOccurrenceDetails(VulnerabilityOccurrenceBase):
    events: List[VulnerabilityEvent] = []

class VulnerabilityDefinitionDetails(VulnerabilityDefinition):
    occurrences: List[VulnerabilityOccurrenceBase] = []


class VulnerabilityStatusUpdate(BaseModel):
    status: str # "open", "remediated", "false_positive"
